<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tw="clr-namespace:ThemedWindow.Controls;assembly=ThemedWindow">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ToggleButtonStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#7F7F7F" Opacity="0.2"/>
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#7F7F7F" Opacity="0.3"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#7F7F7F" Opacity="0.3"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="Transparent"/>

    <Style TargetType="ListBox">
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="Fill" Value="{Binding ThemedForeGround, RelativeSource={RelativeSource AncestorType=tw:TWindow}}"/>
                <Setter Property="FlowDirection" Value="LeftToRight"/>
                <Setter Property="Margin" Value="7"/>
                <Setter Property="MinHeight" Value="{Binding ActualWidth, RelativeSource={RelativeSource Mode=Self}}"/>
            </Style>
        </Style.Resources>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="Padding" Value="4,1"/>
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <ToggleButton x:Name="Bd" Background="{TemplateBinding Background}" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                              SnapsToDevicePixels="true"
                                              BorderThickness="0">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </ToggleButton>

                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                                
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>