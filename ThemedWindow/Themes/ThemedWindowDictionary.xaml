<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ThemedWindow.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ThemedScrollBarDictionary.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <SolidColorBrush x:Key="TitleBarButtonMouseOverColor" Color="#7F7F7F" Opacity="0.2"/>

    <Style x:Key="TitleBarButtonBase" TargetType="Button">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{Binding Path=ThemedForeGround, RelativeSource={RelativeSource AncestorType={x:Type local:TWindow}}}"/>
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>

    <Style x:Key="TitleBarButtonStyle" BasedOn="{StaticResource TitleBarButtonBase}" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                       Background="Transparent"
                       BorderThickness="0"
                       SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                       Margin="0"
                       HorizontalAlignment="Center" VerticalAlignment="Center"
                       Focusable="False" RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource TitleBarButtonMouseOverColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource TitleBarButtonMouseOverColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="MaxHeight" Value="10"/>
                <Setter Property="MaxWidth" Value="10"/>
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                <Setter Property="Stretch" Value="Uniform"/>
                <Setter Property="Stroke" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                <Setter Property="StrokeThickness" Value="1"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="TitleBarMaximizeButtonStyle" BasedOn="{StaticResource TitleBarButtonStyle}" TargetType="Button">
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="MaxHeight" Value="10"/>
                <Setter Property="MaxWidth" Value="10"/>
                <Setter Property="Stretch" Value="Uniform"/>
                <Setter Property="Stroke" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                <Setter Property="StrokeThickness" Value="1"/>
                <Style.Triggers>
                    <!-- Trigger when Window is Maximized -->
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" 
                         Value="Maximized">
                        <Setter Property="Data" Value="M 13.5,12.5 H 20.5 V 19.5 H 13.5 Z M 15.5,12.5 V 10.5 H 22.5 V 17.5 H 20.5"/>
                        <Setter Property="ToolTip" Value="Restore"/>
                    </DataTrigger>

                    <!-- Trigger when Window is Normal (Not Maximized) -->
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" 
                         Value="Normal">
                        <Setter Property="Data" Value="M 13.5,10.5 H 22.5 V 19.5 H 13.5 Z"/>
                        <Setter Property="ToolTip" Value="Maximize"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="TitleBarXButtonStyle" BasedOn="{StaticResource TitleBarButtonBase}"  TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                   Background="Transparent"
                   BorderThickness="0"
                   SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                   Margin="0"
                   HorizontalAlignment="Center" VerticalAlignment="Center"
                   Focusable="False" RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter  Property="Background" Value="#FFE81123" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#FFE81123" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="MaxHeight" Value="10"/>
                <Setter Property="MaxWidth" Value="10"/>
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                <Setter Property="Stretch" Value="Uniform"/>
                <Setter Property="Stroke" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                <Setter Property="StrokeThickness" Value="1"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="local:TWindow" x:Key="ThemedWindowStyle">
        <Style.Resources>
            <Style TargetType="ScrollBar" BasedOn="{StaticResource ThemedScrollBar}"/>
            <Style TargetType="ScrollViewer" BasedOn="{StaticResource ThemedScrollViewer}"/>
        </Style.Resources>
        <Setter Property="Foreground" Value="{Binding ThemedForeGround, RelativeSource={RelativeSource Mode=Self}}"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                CornerRadius="{x:Static SystemParameters.WindowCornerRadius}"
                ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                UseAeroCaptionButtons="False"
                CaptionHeight="36"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:TWindow">
                    <Border Background="{Binding ThemedBackGround, RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid x:Name="RootGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="36"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>

                                <StackPanel Orientation="Horizontal" Grid.Column="0">
                                    <Image Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                            Margin="5,0,5,0" VerticalAlignment="Center"
                                           Height="{Binding ActualHeight, ElementName=WindowTitleBox}"/>
                                    <TextBlock x:Name="WindowTitleBox" Text="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}"
                                               VerticalAlignment="Center"
                                               Foreground="{Binding Path=ThemedForeGround, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </StackPanel>

                                <StackPanel x:Name="TitleBarButtonsPanel" Orientation="Horizontal" Grid.Column="2">
                                    <Grid Background="{Binding Background, ElementName=MinimizeButton}">
                                        <Button x:Name="MinimizeButton"
                                                Margin="2"
                                                Command="{Binding MinimizeCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                Style="{StaticResource TitleBarButtonStyle}"
                                                ToolTip="{Binding MinimizeButtonTooltip, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Path Data="M 13,15 H 23"/>
                                        </Button>
                                    </Grid>

                                    <Grid Background="{Binding Background, ElementName=MaximizeRestoreButton}">
                                        <Button x:Name="MaximizeRestoreButton"
                                                Margin="2"
                                                Style="{StaticResource TitleBarMaximizeButtonStyle}"
                                                Command="{Binding MaximizeRestoreCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                ToolTip="{Binding MaximizeButtonTooltip, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Path x:Name="maximizeIcon"/>
                                        </Button>
                                    </Grid>

                                    <Grid Background="{Binding Background, ElementName=CloseButton}">
                                        <Button x:Name="CloseButton" Style="{StaticResource TitleBarXButtonStyle}"
                                                Margin="2"
                                                Command="{Binding CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                ToolTip="{Binding XButtonTooltip, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Path Data="M 13,11 22,20 M 13,20 22,11"/>
                                        </Button>
                                    </Grid>
                                </StackPanel>
                            </Grid>

                            <ContentPresenter x:Name="PART_MainContentPresenter"  Grid.Row="1"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="RootGrid" Property="Margin" Value="7.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>